[[plugins]]
repo = 'Shougo/dein.vim'

# --------------------------------------------------------
#                            GTD
# ---------------------------------------------------------

[[plugins]]
repo = 'dbeniamine/todo.txt-vim'
hook_add = '''
  let g:TodoTxtForceDoneName='done.txt'
  autocmd callmekohei-vimrc filetype todo setlocal omnifunc=todo#Complete
  autocmd callmekohei-vimrc filetype todo imap <buffer> + +<C-X><C-O>
  autocmd callmekohei-vimrc filetype todo imap <buffer> @ @<C-X><C-O>
  autocmd callmekohei-vimrc filetype todo setlocal completeopt-=preview
'''

[[plugins]]
repo='glidenote/memolist.vim'
hook_add = '''
  let g:memolist_path = "$HOME/Dropbox/memo"
  let g:memolist_memo_suffix = "memo"
  let g:memolist_template_dir_path = g:memolist_path
  let g:memolist_ex_cmd = 'Files'
  autocmd callmekohei-vimrc VimEnter * command! -nargs=* MemoGrep
    \ call fzf#vim#ag( <q-args> , fzf#vim#with_preview( {'dir':g:memolist_path}, 'right:50%' ) )
'''

# ---------------------------------------------------------
#                       doc-viewer
# ---------------------------------------------------------

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo ='thinca/vim-ref'
hook_add = '''
  let g:ref_man_cmd = 'man'
  let g:ref_pydoc_cmd = 'python3 -m pydoc'
  let g:ref_source_webdict_cmd = 'w3m -dump %s'
  let g:ref_use_vimproc = v:true

  "webdictサイトの設定
  let g:ref_source_webdict_sites = {
  \     'fsharp': { 'url'   : 'https://github.com/MicrosoftDocs/visualfsharpdocs/tree/live/docs/conceptual/%s'}
  \   , 'alk' : { 'url' : 'http://eow.alc.co.jp/%s/UTF-8/' }
  \ }

  " 出力に対するフィルタ
  function! g:ref_source_webdict_sites.fsharp.filter(output)
    let l:lst  = split(a:output, "\n")
    call filter(l:lst,{idx, val -> val =~ '.md'} )
    return join(l:lst,"\n")
  endfunction
'''

# ---------------------------------------------------------
#                        editing helper
# ---------------------------------------------------------

# wait for fix (https://github.com/taku-o/vim-vis/blob/master/plugin/cecutil.vim#L45-L50)
# [[plugins]]
# repo = 'taku-o/vim-vis'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
  xmap ga <Plug>(EasyAlign)
  nmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'thinca/vim-partedit'
hook_add = '''
  let g:partedit#opener = 'vsp'
  let g:partedit#filetype = 'vim'
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
  if !exists('g:tcomment_types')
    let g:tcomment_types = {}
  endif
  let g:tcomment_types['fsharp'] = '// %s'
  let g:tcomment_types['mql4'] = '// %s'
  let g:tcomment_types['text'] = '// %s'
  let g:tcomment_types['text.memo'] = '// %s'
'''

# ---------------------------------------------------------
#                          snipet
# ---------------------------------------------------------

[[plugins]]
repo = 'mattn/sonictemplate-vim'

# ---------------------------------------------------------
#                          finder
# ---------------------------------------------------------

[[plugins]]
repo   = 'junegunn/fzf.vim'
build  = './install --all'
hook_add = 'source ~/dotfiles/vim/plugins/fzf.rc.vim'

# ---------------------------------------------------------
#                         compiler
# ---------------------------------------------------------

[[plugins]]
repo   = 'thinca/vim-quickrun'
depends  = ['Shougo/vimproc.vim']
hook_add = '''
  let g:quickrun_no_default_key_mappings = 1
  let g:quickrun_config = {}
  let g:quickrun_config._ = {
  \  'runner'                          : 'vimproc'
  \ ,'runner/vimproc/updatetime'       : 60
  \ ,'hook/time/enable'                : 1
  \ ,'hook/time/format'                : "\n*** time : %g s ***"
  \ ,'hook/time/dest'                  : ''
  \ ,"outputter/buffer/split"          : 'vertical'
  \ ,'outputter/buffer/close_on_empty' : 1
  \}
'''

[[plugins]]
repo    = 'Shougo/vimproc.vim'
build   = 'make'
on_source = ['vim-quickrun']

# ---------------------------------------------------------
#                        appearance
# ---------------------------------------------------------

[[plugins]]
repo = 'romainl/Apprentice'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  map <Nop>(disable-IndentGuidesToggle) <Plug>IndentGuidesToggle
  let g:indent_guides_enable_on_vim_startup = 1
  let g:indent_guides_start_level = 2
  let g:indent_guides_guide_size  = 1
  let g:indent_guides_auto_colors = 0
  autocmd callmekohei-vimrc VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=#3A3C43 ctermbg=0
  autocmd callmekohei-vimrc VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#3A3C43 ctermbg=0
'''

# --------------------------------------------------------

# [[plugins]]
# repo = 'fsharp/vim-fsharp'
# on_ft = 'fsharp'
# build = 'make fsautocomplete'

# [[plugins]]
# repo = 'ervandew/supertab'
# on_ft = 'fsharp'
# hook_add = '''
#   let g:SuperTabDefaultCompletionType = "<c-x><c-o>"
# '''
