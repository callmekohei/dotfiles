[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'mattn/sonictemplate-vim'

[[plugins]]
repo = 'dbeniamine/todo.txt-vim'
hook_add = '''
let g:TodoTxtForceDoneName='done.txt'
au callmekohei-vimrc filetype todo setlocal omnifunc=todo#Complete
au callmekohei-vimrc filetype todo imap <buffer> + +<C-X><C-O>
au callmekohei-vimrc filetype todo imap <buffer> @ @<C-X><C-O>
au callmekohei-vimrc filetype todo setlocal completeopt-=preview
'''


[[plugins]]
repo='glidenote/memolist.vim'
hook_add = '''
let g:memolist_path = "$HOME/Dropbox/memo"
let g:memolist_memo_suffix = "txt"
let g:memolist_template_dir_path = g:memolist_path
let g:memolist_ex_cmd = 'Files'
autocmd callmekohei-vimrc VimEnter * command! -nargs=* MemoGrep
  \ call fzf#vim#ag( <q-args> , fzf#vim#with_preview( {'dir':g:memolist_path}, 'right:50%' ) )
'''

# [[plugins]]
# repo = 'fsharp/vim-fsharp'
# on_ft = 'fsharp'
# build = 'make fsautocomplete'

# [[plugins]]
# repo = 'ervandew/supertab'
# on_ft = 'fsharp'
# hook_add = '''
#   let g:SuperTabDefaultCompletionType = "<c-x><c-o>"
# '''


# on_if が効いてない気がする ( 2018/06/07 )
# [[plugins]]
# repo  = 'roxma/vim-hug-neovim-rpc'
# on_if = '!has("nvim")'
#
# [[plugins]]
# repo  = 'roxma/nvim-yarp'
# on_if = '!has("nvim")'
#
# [[plugins]]
# repo  = 'callmekohei/tigaDebugger'
# on_if = '!has("nvim")'

[[plugins]]
repo   = 'junegunn/fzf.vim'
build  = './install --all'
hook_add = 'source ~/dotfiles/vim/plugins/fzf.rc.vim'

[[plugins]]
repo = 'romainl/Apprentice'
hook_add = '''
  function!   MyHighlights() abort
    highlight Comment     ctermfg=245   guifg=#8a8a8a
    highlight FoldColumn  ctermfg=245   guifg=#8a8a8a
    highlight Folded      ctermfg=245   guifg=#8a8a8a
  endfunction

  autocmd callmekohei-vimrc ColorScheme * call MyHighlights()
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
  if !exists('g:tcomment_types')
    let g:tcomment_types = {}
  endif
  let g:tcomment_types['fsharp'] = '// %s'
  let g:tcomment_types['mql4'] = '// %s'
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
  xmap ga <Plug>(EasyAlign)
  nmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  map <Nop>(disable-IndentGuidesToggle) <Plug>IndentGuidesToggle
  let g:indent_guides_enable_on_vim_startup = 1
  let g:indent_guides_start_level = 2
  let g:indent_guides_guide_size  = 1
  let g:indent_guides_auto_colors = 0
  autocmd callmekohei-vimrc VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=#3A3C43 ctermbg=0
  autocmd callmekohei-vimrc VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#3A3C43 ctermbg=0
'''

[[plugins]]
repo   = 'thinca/vim-quickrun'
depends  = ['Shougo/vimproc.vim']
hook_add = '''
  let g:quickrun_no_default_key_mappings = 1
  let g:quickrun_config = {}
  let g:quickrun_config._ = {
  \  'runner'                          : 'vimproc'
  \ ,'runner/vimproc/updatetime'       : 60
  \ ,'hook/time/enable'                : 1
  \ ,'hook/time/format'                : "\n*** time : %g s ***"
  \ ,'hook/time/dest'                  : ''
  \ ,"outputter/buffer/split"          : 'vertical'
  \ ,'outputter/buffer/close_on_empty' : 1
  \}
'''

[[plugins]]
repo    = 'Shougo/vimproc.vim'
build   = 'make'
on_source = ['vim-quickrun']

[[plugins]]
repo = 'thinca/vim-partedit'
hook_add = '''
  let g:partedit#opener = 'vsp'
  let g:partedit#filetype = 'vim'
'''

[[plugins]]
repo = 'kana/vim-textobj-user'
